// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3VbRcaQK8iBKRyR7HijFFP
// Component: nV2_81KpRBI9Ho
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: XDZ3fw8KSlLPt/component

import { useScreenVariants as useScreenVariantsoMqiIai6El4Wl1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: OMqiIAI6El4Wl1/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_fathym_acme.module.css"; // plasmic-import: 3VbRcaQK8iBKRyR7HijFFP/projectcss
import sty from "./PlasmicDigital.module.css"; // plasmic-import: nV2_81KpRBI9Ho/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: DQaP_ggoXwEuDn/icon
import ArrowDownsvgIcon from "./icons/PlasmicIcon__ArrowDownsvg"; // plasmic-import: oHRiD8oWkhsvnZ/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: uFyABjYN8fp-NS/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: jCpzkILyhRbyUR/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: 18FX2IB-vHJ0UA/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: u7N9Vhc5L4re1x/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: Ungsw0RY4L-Kiw/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: frqp-YRHUH2hQL/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: nGWY7eVpYPKpsx/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: Coz1qiOhMoNtU0/icon

export type PlasmicDigital__VariantMembers = {};

export type PlasmicDigital__VariantsArgs = {};
type VariantPropType = keyof PlasmicDigital__VariantsArgs;
export const PlasmicDigital__VariantProps = new Array<VariantPropType>();

export type PlasmicDigital__ArgsType = {};
type ArgPropType = keyof PlasmicDigital__ArgsType;
export const PlasmicDigital__ArgProps = new Array<ArgPropType>();

export type PlasmicDigital__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  span?: p.Flex<"span">;
  foreground?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
};

export interface DefaultDigitalProps {}

export const defaultDigital__Args: Partial<PlasmicDigital__ArgsType> = {};

function PlasmicDigital__RenderFunc(props: {
  variants: PlasmicDigital__VariantsArgs;
  args: PlasmicDigital__ArgsType;
  overrides: PlasmicDigital__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultDigital__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsoMqiIai6El4Wl1()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__zHnuW)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ntLor)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__o5YcM)}
              >
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l7B73)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__cVtDh
                      )}
                      component={Link}
                      href={"/" as const}
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___8K0XO)}
                        displayHeight={"default" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"200px" as const}
                        src={{
                          src: "/plasmic/fathym_acme/images/acmepng.png",
                          fullWidth: 1200,
                          fullHeight: 406,
                          aspectRatio: undefined
                        }}
                      />
                    </p.PlasmicLink>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jHwq8)}
                    >
                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__foB7N
                        )}
                        component={Link}
                        href={"/brand" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zy4Ze
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lxJc4
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "BRAND"
                            : "BRAND"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wMmrz
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__wjvLk
                        )}
                        component={Link}
                        href={"/dashboard/" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uapi0
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hDUkO
                          )}
                        >
                          {"DASHBOARD"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xcmXc
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___5K26I
                        )}
                        component={Link}
                        href={"/digital" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sOtYh
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7DXnZ
                          )}
                        >
                          {"DIGITAL"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vA0U0
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__pdiyi
                        )}
                        component={Link}
                        href={"/shop" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__but2O
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bfDcn
                          )}
                        >
                          {"SHOP"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__c3KK2
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      {true ? (
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__ogEmg
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bHyS
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sOg2V
                            )}
                          >
                            {"Contact"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gryjt
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__oq4Ft
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oKiOd
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qvGbI
                            )}
                          >
                            {"Company"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__l3PRo
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yQtV)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__mtkuo
                      )}
                    >
                      {"Sign up"}
                    </button>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__pI9F
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__koo6H)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__enpoP
                        )}
                      >
                        {"Log in"}
                      </div>

                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__zIggU)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sDwr4)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"We help you craft "}</React.Fragment>
                      <span
                        data-plasmic-name={"span"}
                        data-plasmic-override={overrides.span}
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span
                        )}
                      >
                        {"high-end"}
                      </span>
                      <React.Fragment>{" digital experiences."}</React.Fragment>
                    </React.Fragment>
                  </h1>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__inm4N
                    )}
                  >
                    {"BRAND | dashboard | DIGITAL"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox___58Hq)}>
                  <ArrowDownsvgIcon
                    className={classNames(projectcss.all, sty.svg___0ZOu7)}
                    role={"img"}
                  />
                </div>
              ) : null}
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__new7R)}>
            <div className={classNames(projectcss.all, sty.freeBox__rvJza)}>
              <div className={classNames(projectcss.all, sty.freeBox__pbyY3)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1SyGc
                  )}
                >
                  {"SERVICES"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__awPta
                  )}
                >
                  {"We help you stand out from the crowd."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section___93XkJ)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground"}
                    data-plasmic-override={overrides.foreground}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ysB5C)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6WXSx
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8CMq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7DYkx
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__n5Orw
                              )}
                              component={Link}
                              href={"/brand" as const}
                              platform={"nextjs"}
                            >
                              <Icon21Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aNti
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qYnHi
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xtxNt
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qFzLx
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__x3DGs
                              )}
                            >
                              {"BRAND"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__q9Dvq
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sy0YL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rxO0R
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link___1ZcWj
                              )}
                              component={Link}
                              href={"/dashboard/" as const}
                              platform={"nextjs"}
                            >
                              <Icon18Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__quDou
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___12JIy
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__h4Pss
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___65Xed
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__lq12N
                              )}
                            >
                              {"DASHBOARD"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jeycW
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rmZi
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__enjaT
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__dh3Bd
                              )}
                              component={Link}
                              href={"/digital" as const}
                              platform={"nextjs"}
                            >
                              <Icon22Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__b3YzI
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__gu8E6
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fRl6A
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vKlQe
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__w6Bx0
                              )}
                            >
                              {"DIGITAL"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tuwAe
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___1AmTj)}>
            <div className={classNames(projectcss.all, sty.freeBox__kd2Av)}>
              <div className={classNames(projectcss.all, sty.freeBox__i1RPx)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ec5G5
                  )}
                >
                  {"WORK"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__rX2Bo
                  )}
                >
                  {"Let our work speak for itself."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section__juwAr)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground3"}
                    data-plasmic-override={overrides.foreground3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground3)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__y2Ny7)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vnujL
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__maWkh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___15Iy
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__uHn0G)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/fathym_acme/images/pexelsTimMossholder1154739Jpg.jpeg",
                                fullWidth: 1920,
                                fullHeight: 1280,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__sACfs
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mw2Fz
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ea563
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__oyJ93
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__steyI
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__qrPpr
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__nTaZp
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1JTqk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qoS9V
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__iklec)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/fathym_acme/images/pexelsSolomanSoh1492232Jpg.jpeg",
                                fullWidth: 4000,
                                fullHeight: 2667,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__kyL3
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__urHaZ
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nnU8J
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__rAbi
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__igroF
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__hQo4N
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__mX0El
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___82RK)}>
            <div className={classNames(projectcss.all, sty.freeBox__b6Ncw)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__napKf
                )}
              >
                {"CLIENTS"}
              </div>

              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___9VUqs
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Our Client brands"
                  : "We've been lucky to work with some great companies."}
              </h2>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__tgBu3)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__iAmUu)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-loom.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__n6Vt4)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mADzl)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lf787)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg" as const
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__szXnJ)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___4T0Pv)}
                  displayHeight={"96px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"96px" as const}
                  src={
                    "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                  }
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gi3S0
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kbmop
                  )}
                >
                  {"Lorem, TGS"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4YeNu
                  )}
                >
                  {"Company name lorem"}
                </div>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___7R3WI)}>
            <div className={classNames(projectcss.all, sty.freeBox__hSfnl)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vwqR)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__a5S4L)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___99PS)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100px" as const}
                    src={{
                      src: "/plasmic/fathym_acme/images/acmepng.png",
                      fullWidth: 1200,
                      fullHeight: 406,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__k5Fj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pwfHo
                      )}
                    >
                      {"Connect with us"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__i68C8)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__whIl4)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__gm0N)}
                        role={"img"}
                      />

                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__u82FL)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tkJ5C)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__iqYYc
                    )}
                  >
                    {"Navigation"}
                  </h3>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__vl8Vm
                    )}
                    component={Link}
                    href={"/" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__mDCmu)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gaGlL
                      )}
                    >
                      {"Home"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__tXx8N)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__xTFrP
                    )}
                    component={Link}
                    href={"/brand" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__xN3Ug)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qaBdw
                      )}
                    >
                      {"Brand"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__x6KKe)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9DsZi
                    )}
                    component={Link}
                    href={"/dashboard/" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__inOws)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tsecD
                      )}
                    >
                      {"Dashboard"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__jExdd)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__uELhy
                    )}
                    component={Link}
                    href={"/digital" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__dBz6Q)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sxnu7
                      )}
                    >
                      {"Digital"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___1GvZw)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fMo4U)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__zzw21
                    )}
                  >
                    {"Support"}
                  </h3>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__k2XFu
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__xGZg)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__irsts
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___68OXh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tyP8J
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__gNzx9)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eBq1P
                      )}
                    >
                      {"FAQs"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__qfXZz)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__joaIf
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___8HHXx)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nxdx
                      )}
                    >
                      {"Status"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__o6Zb6)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__o3L5W
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__wc8Jk)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eaUmZ
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__zt1Gh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__upjJw)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___8KHj
                    )}
                  >
                    {"Address"}
                  </h3>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__c07Nf
                    )}
                  >
                    {"1223 Lorem state22\n1234 XYA VARE"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hJt6K
                    )}
                  >
                    {"Phone:  214141414114"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4CKJ
                    )}
                  >
                    {"Email:  Info@gmail.com"}
                  </div>
                </p.Stack>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xFZrJ
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {"© Company. All rights reserved. Site proudly built with "}
                  </React.Fragment>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link__js0Ms
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Plasmic"}
                  </p.PlasmicLink>
                  <React.Fragment>{"."}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "foreground2", "h1", "span", "foreground", "foreground3"],
  foreground2: ["foreground2", "h1", "span"],
  h1: ["h1", "span"],
  span: ["span"],
  foreground: ["foreground"],
  foreground3: ["foreground3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  h1: "h1";
  span: "span";
  foreground: "div";
  foreground3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDigital__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDigital__VariantsArgs;
    args?: PlasmicDigital__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDigital__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDigital__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDigital__ArgProps,
      internalVariantPropNames: PlasmicDigital__VariantProps
    });

    return PlasmicDigital__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDigital";
  } else {
    func.displayName = `PlasmicDigital.${nodeName}`;
  }
  return func;
}

export const PlasmicDigital = Object.assign(
  // Top-level PlasmicDigital renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    span: makeNodeComponent("span"),
    foreground: makeNodeComponent("foreground"),
    foreground3: makeNodeComponent("foreground3"),

    // Metadata about props expected for PlasmicDigital
    internalVariantProps: PlasmicDigital__VariantProps,
    internalArgProps: PlasmicDigital__ArgProps
  }
);

export default PlasmicDigital;
/* prettier-ignore-end */
